function [BOWTR, labelsTR, BOWVAL, labelsVAL] = BOWCreator(Train,Val,featStep,imsize,featureFuncs,K)
[ii, jj] = meshgrid(featStep:featStep:imsize-featStep, featStep:featStep:imsize-featStep);
pointPositions = [ii(:), jj(:)];
features=[];
labels=[];

for idx = 1:numel(Train.Files)
    im = readimage(Train,idx);
    class = Train.Labels(idx);
    im = im2double(im);
    im = imresize(im,[imsize imsize]);
    im = rgb2gray(im);
    imageFeatures = [];


    for func = featureFuncs
        [extractedFeature,~] = extractFeatures(im,pointPositions,'Method',func);
        if isstruct(extractedFeature)
            extractedFeature = extractedFeature.Features;
        end
        imageFeatures = [imageFeatures, extractedFeature(:)'];
    end
    features = [features; imageFeatures];
    labels = [labels;repmat(class,size(imagefeatures,1),1);repmat(idx,size(imfeatures,1),1)];
end
[IDX,C]=kmeans(features,K);

for idx = 1:numel(Train.Files)
    class = Train.Labels(idx);
    u=find(labels(:,1)==class & labels(:,2)==idx);
    imfeaturesIDX=IDX(u);
    H=hist(imfeaturesIDX,1:K);
    H=H/sum(H);
    BOW_tr=[BOW_tr; H];
    labels_tr=[labels_tr; class];
end


for idx = 1:numel(Val.Files)
    class = Val.Labels(idx);
    im = im2double(im);
    im = imresize(im,[imsize imsize]);
    im = rgb2gray(im);
end